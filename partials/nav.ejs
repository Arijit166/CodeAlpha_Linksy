<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        
    * { margin: 0; padding: 0; box-sizing: border-box; }
        :root {
      --bg: #000000;
      --nav-bg: rgba(11, 15, 20, 0.95);
      --surface: #111111;
      --surface-light: #1a1a1a;
      --surface-hover: #222222;
      --text: #ffffff;
      --text-secondary: #b3b3b3;
      --text-muted: #666666;
      --border: #333333;
      --border-light: #2a2a2a;
      --primary: #1d9bf0;
      --primary-hover: #1a8cd8;
      --primary-glow: rgba(29, 155, 240, 0.3);
      --heart: #f91880;
      --heart-hover: #ff1a8c;
      --success: #00ba7c;
      --accent-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      --glass-bg: rgba(17, 17, 17, 0.8);
    }
    body {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Inter", sans-serif;
      background: var(--bg);
      color: var(--text);
      line-height: 1.6;
    }

    /* Custom scrollbar */
    ::-webkit-scrollbar { width: 6px; height: 6px; }
    ::-webkit-scrollbar-track { background: var(--surface); border-radius: 3px; }
    ::-webkit-scrollbar-thumb { 
      background: linear-gradient(45deg, var(--primary), var(--heart));
      border-radius: 3px;
      transition: all 0.3s ease;
    }
    ::-webkit-scrollbar-thumb:hover { 
      background: linear-gradient(45deg, var(--primary-hover), var(--heart-hover));
    }
    /* Mobile responsive */
    @media (max-width: 768px) {
      .navbar-container { 
        padding: 10px 16px; 
        gap: 10px; 
        height: 65px;
      }
      .nav-btn span { display: none; }
      .search-wrap { max-width: none; }
      .welcome-banner { margin-top: 65px; top: 65px; }
      .main-layout { padding: 24px 16px 80px; }
      .post-card { 
        border-radius: 12px; 
        border-left: 1px solid var(--border); 
        border-right: 1px solid var(--border); 
      }
    }
     /* Main layout */
    main {
      margin-top: 0;
      padding: 0;
      min-height: 100vh;
    }
        /* Navbar */
    .navbar {
        position: fixed;
        top: 0;
        width: 100%;
        background: linear-gradient(135deg, #1a2a6c, #1d9bf0);
        border-bottom: 1px solid rgba(255, 255, 255, 0.1); /* soft light border */
        z-index: 1000;
        backdrop-filter: blur(15px); /* glassy effect */
        -webkit-backdrop-filter: blur(15px);
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5); /* deeper shadow for contrast */
    }


    .navbar-container {
        margin-left: 20px;
        display: flex;
        align-items: center;
        gap: 16px;
        height: 70px;
        }

    .logo {
      display: flex;
      align-items: center;
      gap: 10px;
      text-decoration: none;
      color: var(--text);
      flex-shrink: 0;
      transition: transform 0.2s ease;
    }

    .logo:hover {
      transform: scale(1.05);
    }

    .logo-icon {
      width: 38px;
      height: 38px;
      background: var(--accent-gradient);
      border-radius: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 900;
      color: white;
      font-size: 20px;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

    .logo-text {
      font-size: 24px;
      font-weight: 800;
      letter-spacing: -0.5px;
      background: var(--accent-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .nav-spacer { flex: 0.5; }

    .search-wrap {
        flex: 1; /* grow to fill available space */
        max-width: none; /* remove the previous max-width */
        display: flex;
        align-items: center;
        gap: 12px;
        background: var(--surface);
        border: 1px solid var(--border);
        padding: 12px 16px;
        border-radius: 12px;
        transition: all 0.3s ease;
        }

    .search-wrap:focus-within {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px var(--primary-glow);
    }

    .search-wrap svg { 
      width: 20px; 
      height: 20px; 
      color: var(--text-secondary);
      transition: color 0.3s ease;
    }

    .search-wrap:focus-within svg {
      color: var(--primary);
    }

    .search-input {
      background: transparent;
      border: none;
      outline: none;
      color: var(--text);
      width: 100%;
      font-size: 15px;
      font-weight: 400;
    }
    .search-input::placeholder { color: var(--text-muted); }

    .nav-actions {
      display: flex;
      align-items: center;
      gap: 8px;
      flex-shrink: 0;
      margin-left: auto;
      margin-right: 16px;
    }

    .nav-btn {
      background: var(--surface);
      border: 1px solid var(--border);
      color: var(--text);
      cursor: pointer;
      padding: 10px 16px;
      border-radius: 10px;
      font-size: 14px;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 8px;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .nav-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
      transition: left 0.5s ease;
    }

    .nav-btn:hover::before {
      left: 100%;
    }

    .nav-btn:hover { 
      background: var(--surface-hover);
      border-color: var(--border-light);
      transform: translateY(-1px);
    }

    .nav-btn.primary { 
      background: #00ba7c;
      color: white;
      border-color: transparent;
      box-shadow: 0 4px 15px var(--primary-glow);
    }

    .nav-btn.primary:hover { 
      background: #009e68;
      transform: translateY(-2px);
      box-shadow: 0 6px 20px var(--primary-glow);
    }

    .nav-icon { width: 20px; height: 20px; }@media (max-width: 480px) {
      .navbar-container {
        padding: 8px 12px;
      }
      .logo-text {
        font-size: 20px;
      }
      .main-layout { padding: 20px 12px 80px; }
      .post-card {
        border-radius: 8px;
        margin: 0 -4px;
      }
    }
    .search-dropdown {
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      background: var(--surface);
      border: 1px solid var(--border);
      border-radius: 12px;
      max-height: 300px;
      overflow-y: auto;
      z-index: 1001;
      display: none;
      margin-top: 4px;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.4);
    }

    .search-dropdown.active {
      display: block;
    }

    .search-result {
      padding: 12px 16px;
      display: flex;
      align-items: center;
      gap: 12px;
      cursor: pointer;
      transition: background 0.2s ease;
      text-decoration: none;
      color: var(--text);
    }

    .search-result:hover {
      background: var(--surface-hover);
    }

    .search-result-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      object-fit: cover;
      border: 2px solid var(--border);
    }

    .search-result-info {
      display: flex;
      flex-direction: column;
      min-width: 0;
    }

    .search-result-name {
      font-size: 14px;
      font-weight: 700;
      color: var(--text);
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .search-result-username {
      font-size: 12px;
      color: var(--text-muted);
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .search-no-results {
      padding: 20px;
      text-align: center;
      color: var(--text-muted);
      font-size: 14px;
    }

    .search-loading {
      padding: 20px;
      text-align: center;
      color: var(--text-secondary);
      font-size: 14px;
    }

    /* Make search wrapper relative for dropdown positioning */
    .search-wrap {
      position: relative;
}
    </style>
</head>
<body>
    <nav class="navbar">
    <div class="navbar-container">
      <a href="#" class="logo" aria-label="Home">
        <div class="logo-icon">L</div>
        <span class="logo-text">linksy</span>
      </a>

      <div class="nav-spacer" aria-hidden="true"></div>

      <form class="search-wrap" role="search" aria-label="Search posts" onsubmit="event.preventDefault()">
        <svg aria-hidden="true" viewBox="0 0 24 24" fill="none">
          <circle cx="11" cy="11" r="7" stroke="currentColor" stroke-width="2"></circle>
          <line x1="21" y1="21" x2="16.65" y2="16.65" stroke="currentColor" stroke-width="2"></line>
        </svg>
        <input id="searchInput" class="search-input" type="search" placeholder="Search users..." aria-label="Search" autocomplete="off" />
        <div id="searchDropdown" class="search-dropdown"></div>
      </form>

      <div class="nav-actions">
        <button class="nav-btn" id="homeBtn" aria-label="Home">
            <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <path d="M3 12 L12 3 L21 12 V21 H3 Z"></path>
            </svg>
            <span>Home</span>
        </button>
        <script>
            document.getElementById("homeBtn").addEventListener("click", function () {
                window.location.href = "/";
            });
        </script>
        <button class="nav-btn primary" id="createPostBtn" aria-label="Create post">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="8" x2="12" y2="16"></line>
            <line x1="8" y1="12" x2="16" y2="12"></line>
          </svg>
          <span>Create a Post</span>
        </button>
        <script>
        document.getElementById("createPostBtn").addEventListener("click", function () {
            window.location.href = "/create-post"; 
        });
        </script>
        <button class="nav-btn" id="profileBtn" aria-label="Profile">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
            <circle cx="12" cy="7" r="4"></circle>
          </svg>
          <span>Profile</span>
        </button>
        <script>
        document.getElementById("profileBtn").addEventListener("click", function () {
            window.location.href = "/profile";
        });
        </script>
        <button class="nav-btn" id="signOutBtn" aria-label="Sign In">
          <svg class="nav-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor">
            <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path>
            <polyline points="10,17 15,12 10,7"></polyline>
            <line x1="15" y1="12" x2="3" y2="12"></line>
          </svg>
          <span>Sign Out</span>
        </button>
      </div>
    </div>
  </nav>
</body>
<script>

    // Add some loading animation for better UX
    document.addEventListener('DOMContentLoaded', () => {
      // Add a slight delay to simulate loading
      setTimeout(() => {
        document.body.style.opacity = '1';
      }, 100);
    });

    // Search functionality
    let searchTimeout;
    const searchInput = document.getElementById('searchInput');
    const searchDropdown = document.getElementById('searchDropdown');

    // Search function
    async function performSearch(query) {
      if (!query || query.trim().length === 0) {
        hideSearchDropdown();
        return;
      }

      try {
        showSearchLoading();
        
        const response = await fetch(`/api/search?q=${encodeURIComponent(query.trim())}`);
        const data = await response.json();
        
        if (data.error) {
          showSearchError();
          return;
        }
        
        displaySearchResults(data.users);
      } catch (error) {
        console.error('Search error:', error);
        showSearchError();
      }
    }

    // Display search results
    function displaySearchResults(users) {
      if (users.length === 0) {
        searchDropdown.innerHTML = '<div class="search-no-results">No users found</div>';
      } else {
        searchDropdown.innerHTML = users.map(user => `
          <a href="/user/${user.username}" class="search-result">
            <img src="${user.avatar || 'https://picsum.photos/seed/' + user.username + '/64/64'}" 
                alt="${user.username}" 
                class="search-result-avatar" />
            <div class="search-result-info">
              <div class="search-result-name">${user.name}</div>
            </div>
          </a>
        `).join('');
      }
      
      showSearchDropdown();
    }

    // Show loading state
    function showSearchLoading() {
      searchDropdown.innerHTML = '<div class="search-loading">Searching...</div>';
      showSearchDropdown();
    }

    // Show error state
    function showSearchError() {
      searchDropdown.innerHTML = '<div class="search-no-results">Search failed. Please try again.</div>';
      showSearchDropdown();
    }

    // Show dropdown
    function showSearchDropdown() {
      searchDropdown.classList.add('active');
    }

    // Hide dropdown
    function hideSearchDropdown() {
      searchDropdown.classList.remove('active');
    }

    // Search input event listener
    searchInput.addEventListener('input', (e) => {
      const query = e.target.value;
      
      // Clear previous timeout
      if (searchTimeout) {
        clearTimeout(searchTimeout);
      }
      
      // Debounce search - wait 300ms after user stops typing
      searchTimeout = setTimeout(() => {
        performSearch(query);
      }, 300);
    });

    // Hide dropdown when clicking outside
    document.addEventListener('click', (e) => {
      if (!e.target.closest('.search-wrap')) {
        hideSearchDropdown();
      }
    });

    // Hide dropdown when pressing escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        hideSearchDropdown();
        searchInput.blur();
      }
    });

    // Handle search result clicks
    searchDropdown.addEventListener('click', (e) => {
      if (e.target.closest('.search-result')) {
        hideSearchDropdown();
        searchInput.value = '';
      }
    });

    // Add this function to handle sign out confirmation
    function showSignOutConfirmation() {
        // Create confirmation modal container
        const confirmationModal = document.createElement('div');
        confirmationModal.style.cssText = `
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: #111111;
            border: 1px solid #2a2a2a;
            border-radius: 16px;
            padding: 32px 24px;
            text-align: center;
            z-index: 1000;
            min-width: 320px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
        `;
        
        confirmationModal.innerHTML = `
            <div style="color: #ff6b6b; font-size: 24px; margin-bottom: 16px;">⚠️</div>
            <h3 style="color: #ffffff; font-size: 18px; margin-bottom: 8px; font-weight: 600;">Sign Out</h3>
            <p style="color: #8a8a8a; font-size: 14px; margin-bottom: 24px; line-height: 1.4;">Are you sure you want to log out of your account?</p>
            <div style="display: flex; gap: 12px; justify-content: center;">
                <button id="cancelSignOut" style="
                    background: none;
                    border: 1px solid #3a3a3a;
                    color: #ffffff;
                    padding: 10px 20px;
                    border-radius: 20px;
                    font-size: 14px;
                    font-weight: 600;
                    cursor: pointer;
                    transition: all 0.2s;
                ">Cancel</button>
                <button id="confirmSignOut" style="
                    background: #ff6b6b;
                    border: 2px solid #ff6b6b;
                    color: #ffffff;
                    padding: 10px 20px;
                    border-radius: 20px;
                    font-size: 14px;
                    font-weight: 600;
                    cursor: pointer;
                    transition: all 0.2s;
                ">Sign Out</button>
            </div>
        `;
        
        // Create overlay
        const overlay = document.createElement('div');
        overlay.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            z-index: 999;
        `;
        
        // Add to page
        document.body.appendChild(overlay);
        document.body.appendChild(confirmationModal);
        
        // Get buttons
        const cancelBtn = document.getElementById('cancelSignOut');
        const confirmBtn = document.getElementById('confirmSignOut');
        
        // Clean up function
        const cleanup = () => {
            document.body.removeChild(overlay);
            document.body.removeChild(confirmationModal);
        };
        
        // Handle cancel
        cancelBtn.addEventListener('click', cleanup);
        overlay.addEventListener('click', cleanup);
        
        // Handle confirm sign out
        confirmBtn.addEventListener('click', async () => {
            confirmBtn.disabled = true;
            confirmBtn.textContent = 'Signing out...';
            
            try {
                const response = await fetch('/signout', { 
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                const data = await response.json();
                if (data.success) {
                    window.location.href = data.redirect;
                } else {
                    alert('Sign out failed. Please try again.');
                    cleanup();
                }
            } catch (error) {
                console.error('Sign out error:', error);
                alert('An error occurred. Please try again.');
                cleanup();
            }
        });
    }
    // Add event listener for the sign out button
   document.getElementById("signOutBtn").addEventListener("click", showSignOutConfirmation);
</script>
</script>
</html>